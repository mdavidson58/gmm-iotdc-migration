import collections

gtwCfgMap = collections.OrderedDict ([

      (  "name"                                        ,     "name"                                    ),
      (  "eid"                                         ,     "eid"                                     ),
      (  "deviceType"                                  ,     "deviceType"                              ),
      (  "configGroup"                                 ,     "configGroup"                             ),
      (  "wifi_desired_state"                          ,     "wifi_desired_state"                      ),
      (  "wifi_ssid"                                   ,     "wifi_ssid"                               ),
      (  "wifi_pre_shared_key"                         ,     "wifi_pre_shared_key"                     ),
      ( "lan_ports_desired_state"                      ,     "lan_ports_desired_state"                 ),
      (  "wan_port_desired_state"                      ,     "wan_port_desired_state"                  ),
      (  "created_at"                                  ,     "created_at"                              ),                                                                                     
      (  "updated_at"                                  ,     "updated_at"                              ),                                                                                         
      (  "wan_interface_type"                          ,     "wan_interface_type"                      ),                  
      (  "apn"                                         ,     "apn"                                     ), 
      (  "secondary_apn"                               ,     "secondary_apn"                           ), 
      (  "gps_desired_state"                           ,     "gps_desired_state"                       ), 
      (  "wgb_desired_state"                           ,     "wgb_desired_state"                       ), 
      (  "wgb_ssid"                                    ,     "wgb_ssid"                                ), 
      (  "wgb_pre_shared_key"                          ,     "wgb_pre_shared_key"                      ), 
      (  "wgb_subnet_ip"                               ,     "wgb_subnet_ip"                           ), 
      (  "wgb_subnet_mask"                             ,     "wgb_subnet_mask"                         ), 
      (  "customer_vpn_desired_state"                  ,     "customer_vpn_desired_state"              ), 
      (  "customer_vpn_server_ip"                      ,     "customer_vpn_server_ip"                  ), 
      (  "customer_vpn_pre_shared_key"                 ,     "customer_vpn_pre_shared_key"             ), 
      (  "private_subnet_desired_state"                ,     "private_subnet_desired_state"            ), 
      (  "private_subnet"                              ,     "private_subnet"                          ), 
      (  "private_subnet_dns_ip"                       ,     "private_subnet_dns_ip"                   ), 
      (  "private_subnet_exclusion_range_start"        ,     "private_subnet_exclusion_range_start"    ), 
      (  "private_subnet_exclusion_range_end"          ,     "private_subnet_exclusion_range_end"      ), 
      (  "customer_vpn_tunnel_status"                  ,    "customer_vpn_tunnel_status"               ),
      (  "customer_vpn_tunnel_ip_address"              ,    "customer_vpn_tunnel_ip_address"           ),
      (  "vrf_enabled"                                 ,    "vrf_enabled"                              ),
      (  "wgb_status"                                  ,    "wgb_status"                               ),
      (  "wgb_ip_address"                              ,    "wgb_ip_address"                           ),
      (  "port_forwarding_desired_state"               ,    "port_forwarding_desired_state"            ),
      (  "private_subnet_nat"                          ,    "private_subnet_nat"                       ),
      (  "private_subnet_advanced"                     ,    "private_subnet_advanced"                  ),
      (  "private_subnet_gateway_ip"                   ,    "private_subnet_gateway_ip"                ),
      (  "private_subnet_netmask"                      ,    "private_subnet_netmask"                   ),
      (  "ip_dhcp_helper"                              ,    "ip_dhcp_helper"                           ),
      (  "broadcast_ssid_enable"                       ,    "broadcast_ssid_enable"                    ),
      (  "backup_customer_vpn_server_ip"               ,    "backup_customer_vpn_server_ip"            ),
      (  "backup_customer_vpn_pre_shared_key"          ,    "backup_customer_vpn_pre_shared_key"       ),
      (  "customer_vpn_active_peer_ip"                 ,    "customer_vpn_active_peer_ip"              ),
      (  "advanced_wifi_config"                        ,    "advanced_wifi_config"                     ),
      (  "unified_ap_desired_state"                    ,    "unified_ap_desired_state"                 ),
      (  "wlc_primary_ip"                              ,   "wlc_primary_ip"                            ),
      (  "wlc_secondary_ip"                            ,   "wlc_secondary_ip"                          ),
      (  "desired_recovery_time"                       ,   "desired_recovery_time"                     ),
      (  "current_recovery_time"                       ,   "current_recovery_time"                     ),
      (  "dual_lte_active_desired_state"               ,   "dual_lte_active_desired_state"             ),
      (  "dual_lte_active_load"                        ,   "dual_lte_active_load"                      ),
      (  "dual_lte_active_subnet"                      ,   "dual_lte_active_subnet"                    ),
      (  "dual_lte_active_subnet_address"              ,   "dual_lte_active_subnet_address"            ),
      (  "dual_lte_active_subnet_mask"                 ,   "dual_lte_active_subnet_mask"               ),
      (  "dot1x_enabled"                               ,   "dot1x_enabled"                             ),
      (  "primary_aaa_server_ip"                       ,   "primary_aaa_server_ip"                     ),
      (  "secondary_aaa_server_ip"                     ,   "secondary_aaa_server_ip"                   ),
      (  "primary_aaa_server_key"                      ,   "primary_aaa_server_key"                    ),
      (  "secondary_aaa_server_key"                    ,   "secondary_aaa_server_key"                  ),
      (  "apn_current"                                 ,      "apn_current"                            ),    
      (  "secondary_apn_current"                       ,      "secondary_apn_current"                  ),
      (  "retry_count"                                 ,      "retry_count"                            ),
      (  "next_config_retry_at"                        ,      "next_config_retry_at"                   ),
      (  "state"                                       ,      "state"                                  ),         
])